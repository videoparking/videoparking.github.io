{"version":3,"sources":["api.js","MapView.js","URLImage.js","zonesApi.js","PreviewZonesComponent.js","PreviewDetectionsComponent.js","CamView.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","DefaultIcon","L","icon","iconRetinaUrl","iconRetina","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","Marker","prototype","options","trace","console","log","locations","pos","zones","polygon","location","a","API","get","response","data","MapView","useState","stats","first","state","setState","latLng","useParams","split","map","parseFloat","refreshStats","getStats","then","duration","frameTime","newS","document","title","message","Date","catch","err","retries","useEffect","renewInterval","timer","setTimeout","clearTimeout","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","s","locationId","loc","zone","markerPos","maxCars","parseInt","cap","pathOptions","fillColor","color","position","Polygon","positions","Popup","toLocaleString","undefined","maximumFractionDigits","to","URLImage","image","error","handleLoad","props","onLoadImage","handleError","this","loadImage","oldProps","src","removeEventListener","window","Image","addEventListener","text","fontSize","fill","x","y","scaleX","scale","scaleY","ref","node","imageNode","React","Component","norm","e","PreviewZonesComponent","loadZones","getZonesData","scaled","ctx","p","beginPath","moveTo","i","length","lineTo","closePath","fillStrokeShape","name","last_detected_cars","max_detected_cars","info","stroke","strokeWidth","sceneFunc","drawPolygon","PreviewDetectionsComponent","detections","normed","d","object","att_x","bbox_x","bbox_w","att_y","bbox_y","bbox_h","bbox","confidence","toFixed","width","height","calc_vw","Math","max","documentElement","clientWidth","innerWidth","calc_vh","clientHeight","innerHeight","calc_scale","vw","vh","iw","ih","scale_by_w","scale_by_h","min","CamView","picSrc","firstPic","camera","makeStyle","saturation","sec","saturationF","getTime","backgroundImage","backgroundColor","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundPosition","filter","refreshPic","getPicData","style","newState","className","im","changes","updateImageSize","period_for_max","join","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.197702a5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://ib9m7jp63g.execute-api.eu-central-1.amazonaws.com/dev/'\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import 'leaflet/dist/leaflet.css';\nimport React, { useState, useEffect }  from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './MapView.css';\nimport API from './api';\nimport { MapContainer, TileLayer, Polygon, Tooltip, Marker, Popup, useMapEvents } from 'react-leaflet';\n\n// see https://github.com/Leaflet/Leaflet/issues/4968\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nlet DefaultIcon = L.icon({\n    iconRetinaUrl: iconRetina,\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [24,36],\n    iconAnchor: [12,36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst trace = console.log;\n\nconst locations = {\n    \"8f38301f7f70d7d1/1\": {\n        pos: [52.371809, 5.188753],\n        zones: {\n            \"a\": {\n                polygon: [\n                    [52.371880, 5.1887],\n                    [52.371822, 5.18895],\n                    [52.371754, 5.18890],\n                    [52.371803, 5.188663]\n                ]\n            },\n            \"b\": {\n                polygon: [\n                    [52.372080, 5.188689],\n                    [52.372062, 5.188753],\n                    [52.371978, 5.188710],\n                    [52.371993, 5.188643]\n                ]\n            }\n        }\n    }, // 52.371809, 5.188753 -- 52*22'18.5\"N 5*11'19.5\"E\n    //\"a07345b2737af5f/1\": {},\n}\n\nasync function getStats(location) {\n    if (!location) {\n        return;\n    }\n    \n    const response = await API.get(`view?location=${location}`);\n    console.log(\"response:\", response);\n    return response.data;\n\n    return new Promise( (resolutionFunc,rejectionFunc) => {\n\tresolutionFunc({\n            \"frameTime\": \"2020-11-29T23:56:20.437Z\",\n            \"expiresAt\": \"2020-11-30T00:06:20.437Z\",\n            \"duration\": 60,\n            \"renewAfter\": \"2020-11-30T00:02:20.437Z\",\n            \"message\": \"You are ace\",\n            \"stats\": [\n                {\n                    \"location\": \"8f38301f7f70d7d1\",\n                    \"camera\": \"1\",\n                    \"zone\": \"_unknown\",\n                    \"time\": \"2020-11-27 14:20:00.000000000\",\n                    \"last_detected_cars\": \"0\",\n                    \"period_for_max\": \"3 15:27:00.000000000\",\n                    \"max_detected_cars\": \"9\"\n                },\n                {\n                    \"location\": \"8f38301f7f70d7d1\",\n                    \"camera\": \"1\",\n                    \"zone\": \"a\",\n                    \"time\": \"2020-11-29 23:56:00.000000000\",\n                    \"last_detected_cars\": \"8\",\n                    \"period_for_max\": \"6 23:53:00.000000000\",\n                    \"max_detected_cars\": \"11\"\n                },\n                {\n                    \"location\": \"8f38301f7f70d7d1\",\n                    \"camera\": \"1\",\n                    \"zone\": \"b\",\n                    \"time\": \"2020-11-29 23:56:00.000000000\",\n                    \"last_detected_cars\": \"1\",\n                    \"period_for_max\": \"6 23:53:00.000000000\",\n                    \"max_detected_cars\": \"3\"\n                }\n            ]\n\t});\n    });\n}\n\n\nfunction MapView() {\n\n    const [state, setState] = useState({\n        stats: [],\n\tfirst: true,\n        location: \"8f38301f7f70d7d1/1\", // TODO: Add location(s) detection for visible area at lat lon\n    });\n\n    const { latLng } = useParams();\n\n    if (latLng && latLng !== state.latLng) {\n        const pos = latLng.split(\",\").map(parseFloat);\n        console.log(\"pos:\", pos);\n        setState({\n            ...state,\n            latLng: latLng,\n            pos: pos,\n        });\n    }\n\n    const refreshStats = () => {\n\tgetStats(state.location).then(data => {\n            if (data) {\n\t        trace(data);\n\t        const duration = (data.duration ? data.duration : 60);\n                const frameTime = data.frameTime;\n                const newS = {\n                    ...state,\n\t\t    first: false,\n\t\t    duration: duration,\n                    frameTime: frameTime,\n                    stats: data.stats || [],\n\t        };\n                console.log(newS);\n\t        setState(newS);\n\t        document.title = data.message + `, parking at ${state.location} ${new Date(frameTime)}`;\n            }\n\t}).catch(err => {\n            console.log(err);\n\t    const duration = 30;\n            const retries = state.retries ? (state.retries + 1) : 0;\n\t    setState({\n                ...state,\n\t\tfirst: false,\n\t\tduration: duration,\n                retries: retries,\n                stats: [],\n\t    });\n\t    document.title = `Retrying (${retries})` + (state.frameTime ? ` from ${state.frameTime} ...` : '...');\n        });\n    };\n\t\t\n    useEffect(() => {\n\tconst renewInterval = state.first ? 0 : state.duration;\n\tconsole.log('Timeout till renew:', renewInterval);\n\tconst timer = setTimeout(refreshStats, renewInterval*1000);\n\t// Clear timeout if the component is unmounted\n\treturn () => {\n            console.log(\"Stopping renewal of MapView\");\n            clearTimeout(timer);\n        };\n    });\n\n    const startLocation = locations[\"8f38301f7f70d7d1/1\"];\n\n    /*\n    function LocationMarker() {\n        const [position, setPosition] = useState(null)\n        const map = useMapEvents({\n            click() {\n                map.locate()\n            },\n            locationfound(e) {\n                setPosition(e.latlng)\n                map.flyTo(e.latlng, map.getZoom())\n            },\n        })\n\n        return position === null ? null : (\n            <Marker position={position}>\n                <Popup>You are here</Popup>\n            </Marker>\n        )\n    }\n    */\n\n    const Zones = (stats) => {\n        return (\n            stats.map((s) => {\n                const locationId = s[\"location\"]+\"/\"+s[\"camera\"];\n                const loc = locations[locationId];\n                if (loc) {\n                    trace(loc);\n                    const zone = loc.zones[s[\"zone\"]];\n                    if (zone) {\n                        trace(zone);\n                        const markerPos = zone.polygon[0];\n                        trace(markerPos);\n                        const maxCars = parseInt(s[\"max_detected_cars\"]);\n                        const lastCars = parseInt(s[\"last_detected_cars\"]);\n                        const cap = lastCars/maxCars;\n                        trace(cap);\n                        var pathOptions = { fillColor: 'blue', color: 'blue' };\n                        if (cap < 0.5) { pathOptions = { fillColor: 'green', color: 'green' } }\n                        else if (cap < 0.8) { pathOptions = { fillColor: 'red', color: 'red' } }\n                        else if (cap < 1.1) { pathOptions = { fillColor: 'black', color: 'black' } }\n                        \n                        return (\n                            <div key={locationId+\"-\"+s[\"zone\"]} >\n                                <Marker position={markerPos} />\n                                <Polygon\n                                    pathOptions={pathOptions}\n                                    positions={zone.polygon}\n                                >\n                                    <Popup>\n                                        {s[\"last_detected_cars\"]} cars parked by {s[\"time\"]} <br />\n                                        {s[\"max_detected_cars\"]} max (for period of {s[\"period_for_max\"]}) <br />\n                                        {(100*cap).toLocaleString(undefined, {maximumFractionDigits:0})+'%'} filled <br />\n                                        <Link to={\"/cam/\"+s[\"location\"]+\"/\"+s[\"camera\"]+\"/\"+s[\"zone\"]}>view</Link>\n                                    </Popup>\n                                    {/*\n                                       <Tooltip direction=\"bottom\"\n                                       offset={[0, 0]}\n                                       opacity={1}\n                                       permanent\n                                       >\n                                       {s[\"last_detected_cars\"]}/{s[\"max_detected_cars\"]}\n                                       </Tooltip>\n                                     */}\n                                </Polygon>\n                            </div>\n                        );\n                    } else {\n                        trace(s[\"zone\"]);\n                        return null;\n                    }\n                } else {\n                    trace(locationId);\n                    return null;\n                }\n            })\n        );\n    }\n    \n    return (\n        <MapContainer\n            center={state.pos || [52.371809, 5.188753]}\n            zoom={18}\n            scrollWheelZoom={false}\n        >\n            <TileLayer\n                attribution='<a href=\"http://videoparking.live/copyright\">VideoParking.live</a> | &copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {/*<LocationMarker />*/}\n            {Zones(state.stats)}\n        </MapContainer>\n    );\n}\n\nexport default MapView;\n","import React from 'react';\nimport {Image, Text} from 'react-konva';\n\n// custom component that will handle loading image from url\n// you may add more logic here to handle \"loading\" state\n// or if loading is failed\n// VERY IMPORTANT NOTES:\n// at first we will set image state to null\n// and then we will set it to native image instance when it is loaded\nclass URLImage extends React.Component {\n    state = {\n        image: null,\n        error: undefined\n    };\n    componentDidMount() {\n        this.loadImage();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.src !== this.props.src) {\n            this.loadImage();\n        }\n    }\n    componentWillUnmount() {\n        this.image.removeEventListener('load', this.handleLoad);\n    }\n    loadImage() {\n        if (this.props.src) {\n            // save to \"this\" to remove \"load\" handler on unmount\n            this.image = new window.Image();\n            this.image.src = this.props.src;\n            this.image.addEventListener('load', this.handleLoad);\n            this.image.addEventListener('error', this.handleError);\n        } else {\n            this.image = undefined;\n        }\n    }\n    handleLoad = () => {\n        // after setState react-konva will update canvas and redraw the layer\n        // because \"image\" property is changed\n        this.setState({\n            image: this.image,\n            error: undefined\n        });\n        // if you keep same image object during source updates\n        // you will have to update layer manually:\n        // this.imageNode.getLayer().batchDraw();\n        if (this.props.onLoadImage) {\n            this.props.onLoadImage(this.image);\n        }\n    };\n    handleError = (err) => {\n        this.setState({\n            error: \"Loading...\",\n        });\n    };\n    render() {\n        if (this.state.error !== undefined) {\n            return (\n                <Text\n                    text={this.state.error}\n                    fontSize={20}\n                    fill={\"red\"}\n                />\n            );\n        } else {\n            return (\n                <Image\n                    x={0}\n                    y={0}\n                    image={this.state.image}\n                    scaleX={this.props.scale}\n                    scaleY={this.props.scale}\n                    ref={node => {\n                        this.imageNode = node;\n                    }}\n                />\n            );\n        }\n    }\n}\n\nexport default URLImage;\n","import axios from 'axios';\n\nconst BASE_URL = process.env.PUBLIC_URL;\n// const BASE_URL = 'https://github.com/videoparking/zones/raw/main/videoparking_zones/data/v1/'; // Not working due to CORS\n\nexport default axios.create({\n    baseURL: BASE_URL + '/zones-data/v1/'\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import React from 'react';\nimport {Shape, Group, Text} from 'react-konva';\nimport API from './zonesApi';\n\nconst trace = console.log;\n\nasync function getZonesData(location) {\n    if (location) {\n        const response = await API.get(`${location}/zones-v1.json`);\n        console.log(\"response:\", response);\n        return response.data;\n    } else {\n        return undefined;\n    }\n}\n\nfunction norm(stats) {\n    const s = {};\n    stats.map(e =>\n        s[e.zone] = e\n    );\n    return s;\n}\n\nclass PreviewZonesComponent extends React.Component {\n    state = {\n        zones: [],\n        stats: norm(this.props.stats),\n    };\n    componentDidMount() {\n        this.loadZones();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.location !== this.props.location) {\n            this.loadZones();\n        } else if (oldProps.stats !== this.props.stats) {\n            this.setState({\n                ...this.state,\n                stats: norm(this.props.stats),\n            });\n        }\n    }\n    componentWillUnmount() {\n        ///\n    }\n    loadZones() {\n        getZonesData(this.props.location).then(data => {\n            trace(data);\n            this.setState({\n                zones: data.zones,\n                stats: norm(this.props.stats),\n            });\n        }).catch(err => {\n            console.log(\"ERROR:\",err);\n            this.setState({\n                zones: [],\n            });\n        });\n    }\n    drawPolygon(zone) {\n        const scaled = (e) =>  e * this.props.scale;\n        function func(ctx) {\n            if (zone) {\n                const p = zone.polygon;\n                ctx.beginPath();\n                ctx.moveTo(scaled(p[0][0]), scaled(p[0][1]));\n                for (var i = 1; i < p.length; i++) {\n                    ctx.lineTo(scaled(p[i][0]), scaled(p[i][1]));\n                }\n                ctx.closePath();\n                // Konva specific method\n                ctx.fillStrokeShape(this);\n            } else {\n                console.log(\"no zones to preview\");\n            }\n        }\n        return func;\n    }\n    info(name) {\n        if (this.state.stats) {\n            const stats = this.state.stats[name];\n            if (stats) {\n                return `${name} ${stats.last_detected_cars}/${stats.max_detected_cars}`;\n            } else {\n                return name;\n            }\n        }\n    }\n    render() {\n        return (\n            this.state.zones.map((zone) =>\n                <Group\n                    key={zone.name}\n                    x={0}\n                    y={0}\n                >\n                    <Text\n                        text={this.info(zone.name)}\n                        x={3 + zone.polygon[0][0] * this.props.scale}\n                        y={zone.polygon[0][1] * this.props.scale}\n                        fontSize={10}\n                        fill={this.props.color}\n                    />\n                    <Shape\n                        stroke={this.props.color}\n                        strokeWidth={1}\n                        sceneFunc={this.drawPolygon(zone)}\n                    />\n                </Group>\n            )\n        );\n    }\n}\n\n\nexport default PreviewZonesComponent;\n","import React from 'react';\nimport {Rect, Text, Group} from 'react-konva';\n\n\nclass PreviewDetectionsComponent extends React.Component {\n    state = {\n        detections: this.props.detections.map((e) => this.norm(e)),\n    };\n    componentDidMount() {\n        //\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.detections !== this.props.detections) {\n            const normed = this.props.detections.map((e) => this.norm(e))\n            this.setState({\n                detections: normed\n            });\n        }\n    }\n    componentWillUnmount() {\n        //\n    }\n    norm(d) {\n        const dn = {\n            \"object\": d.object,\n            \"confidence\": parseFloat(d[\"measure_value\"]),\n            \"bbox\": {\n                \"x\": parseInt(d.att_x) + parseInt(d.bbox_x) - parseInt(d.bbox_w)/2,\n                \"y\": parseInt(d.att_y) + parseInt(d.bbox_y) - parseInt(d.bbox_h)/2,\n                \"width\": parseInt(d.bbox_w),\n                \"height\": parseInt(d.bbox_h),\n            },\n        };\n        return (dn);\n    }\n    scaled(e) {\n        return e * this.props.scale;\n    }\n    render() {\n        return (\n            this.state.detections.map(d =>\n                <Group\n                    key={d.confidence} // hope confidence will differ at least in grains\n                    x={this.scaled(d.bbox.x)}\n                    y={this.scaled(d.bbox.y)}\n                >\n                    <Text\n                        text={d.object + \" \" + d.confidence.toFixed(2)}\n                        x={3}\n                        fontSize={10}\n                        fill={this.props.color}\n                    />\n                    <Rect\n                        width={this.scaled(d.bbox.width)}\n                        height={this.scaled(d.bbox.height)}\n                        stroke={this.props.color}\n                        strokeWidth={1}\n                    />\n                </Group>\n            )\n        );\n    }\n}\n\nexport default PreviewDetectionsComponent;\n","import React, { useState, useEffect }  from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CamView.css';\nimport API from './api';\nimport URLImage from './URLImage'\nimport PreviewZonesComponent from './PreviewZonesComponent'\nimport PreviewDetectionsComponent from './PreviewDetectionsComponent'\nimport {Layer, Stage, Text, Group} from 'react-konva';\n\nconst trace = console.log;\n\n// const detections_sample = [\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"376\",\n//         \"bbox_h\": \"309\",\n//         \"bbox_x\": \"1310\",\n//         \"bbox_y\": \"324\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218345642,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"379\",\n//         \"bbox_h\": \"269\",\n//         \"bbox_x\": \"2115\",\n//         \"bbox_y\": \"265\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218342,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },    \n// ];\n\n\nasync function getPicData(location) {\n    const response = await API.get(`view?location=${location}&image=yes&detections=yes`);\n    console.log(\"response:\", response);\n    return response.data;\n\n    // return new Promise( (resolutionFunc,rejectionFunc) => {\n    // \t\tresolutionFunc({\n    // \t\t\t\timage: { url: \"https://www.ima-home.be/layout/uploads/2020/06/ima-slide1.jpg\" },\n    // \t\t\t\tmessage: \"xxxxx\",\n    // \t\t});\n    // });\n}\n\nfunction calc_vw() {\n    return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n}\n\nfunction calc_vh() {\n    return Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n}\n\nfunction calc_scale(vw, vh, iw, ih) {\n    if (vw && vh && iw && ih) {\n        const scale_by_w = vw/iw;\n        const scale_by_h = vh/ih;\n        return Math.min(scale_by_w, scale_by_h);\n    } else {\n        return 0.25;\n    }\n}\n\nfunction CamView() {\n\n    const [state, setState] = useState({\n\tpicSrc: undefined,\n\tfirstPic: true,\n        vw: calc_vw(),\n        vh: calc_vh(),\n        scale: calc_scale(calc_vw(), calc_vh()),\n        detections: [],\n        stats: [],\n    });\n\n    const { location, camera } = useParams();\n\n    const makeStyle = (url, frameTime) => {\n        // See:\n        // - https://css-tricks.com/almanac/properties/f/filter/\n        // - https://css-tricks.com/gooey-effect/\n        // - https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n        const now = new Date();\n        const frameAge = (now.getTime() - new Date(frameTime).getTime())/1000; // in sec\n        const expectedAge = 5 + 60; // sec\n        const blur = 0;\n\n        const saturationF = (sec) => {\n            /*\n             * Saturation [0-100] for:\n             *   - 1 min is 100% (full color)\n             *   - 5 min is 0% (no colors)\n             */\n            const x = sec / 60.0; // min, fractions\n            return Math.max(0, Math.min(100, 100 - 25 * x));\n        }\n\n        const saturation = saturationF(frameAge - expectedAge);\n\n        return {\n            backgroundImage:`url(${url})`,\n            backgroundColor: '#282c34',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundAttachment: 'fixed',\n            backgroundPosition: 'center',\n            filter: `blur(${blur}px) saturate(${saturation}%)`,\n        };\n    };\n\n    const refreshPic = () => {\n\tgetPicData(location + \"/\" + camera).then(data => {\n\t    trace(data);\n\t    const duration = (data.duration ? data.duration : 60);\n            const url = data.image.url;\n            const frameTime = data.frameTime;\n            const style = makeStyle(url, frameTime);\n            //console.log(\">>>>>\", url);\n            const newState = {\n                ...state,\n\t\tpicSrc: url,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                frameTime: frameTime,\n                style: style,\n                detections: data.detections || [],\n                stats: data.stats || [],\n\t    }\n\t    setState(newState);\n\t    document.title = data.message + `, parking at ${location}/${camera} ${new Date(frameTime)}`;\n\t}).catch(err => {\n            console.log(err);\n\t    const duration = 30;\n            const style = makeStyle(state.picSrc, state.frameTime);\n            const retries = state.retries ? (state.retries + 1) : 0;\n\t    setState({\n                ...state,\n\t\tpicSrc: state.picSrc,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                style: style,\n                retries: retries,\n                detections: [],\n                stats: [],\n\t    });\n\t    document.title = `Retrying (${retries})` + (state.frameTime ? ` from ${state.frameTime} ...` : '...');\n        });\n    };\n\n    if (location !== state.location || camera !== state.camera) {\n        setState({\n            ...state,\n\t    firstPic: true,\n            location: location,\n            camera: camera,\n\t});\n\t//refreshPic();\n    }\n\n    useEffect(() => {\n\tconst renewInterval = state.firstPic ? 0 : state.duration;\n\tconsole.log('Timeout till renew:', renewInterval);\n\tconst timer = setTimeout(refreshPic, renewInterval*1000);\n\t// Clear timeout if the component is unmounted\n\treturn () => {\n            console.log(\"Stopping renewal of CamView\");\n            clearTimeout(timer);\n        };\n    });\n\n    const updateImageSize = (im) => {\n        const vw = calc_vw();\n        const vh = calc_vh();\n        const iw = im ? im.width : state.iw;\n        const ih = im ? im.height : state.ih;\n        const scale = calc_scale(vw,vh,iw,ih);\n        if (iw !== state.iw || ih !== state.ih ||\n            vw !== state.vw || vh !== state.vh ||\n            scale !== state.scale\n           ) {\n            const changes = {\n                vw: vw,\n                vh: vh,\n                iw: iw,\n                ih: ih,\n                scale: scale,\n            };\n            console.log(\"[!] New state changes:\", changes);\n            setState({\n                ...state,\n                ...changes,\n\t    });\n        }\n    }\n\n    return (\n\t<div className=\"CamView\"\n\t>\n\t    <div className=\"CamView-header\">\n                <Stage\n                    width={state.vw}\n                    height={state.vh}\n                    style={{backgroundColor:'dimgray'}}\n                >\n                    <Layer>\n                        <URLImage\n                            src={state.picSrc}\n                            scale={state.scale}\n                            onLoadImage={(i) => updateImageSize(i)}\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewZonesComponent\n                            location={location + \"/\" + camera}\n                            stats={state.stats}\n                            scale={state.scale}\n                            color=\"magenta\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewDetectionsComponent\n                            detections={state.detections}\n                            scale={state.scale}\n                            color=\"yellow\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <Group\n                            x={state.vw - 200}\n                            y={3}\n                        >\n                            <Text\n                                text={`Info:\n  location: ${location}\n  camera: ${camera}\n  frame time: ${state.frameTime}\n  detections: ${state.detections.length}\n  zones:\n    ` + state.stats.map(stats => `${stats.zone}: ${stats.last_detected_cars}/${stats.max_detected_cars} [max of ${stats.period_for_max}]`).join(`\n    `)}\n                                fontSize={10}\n                                fill={\"magenta\"}\n                            />\n                        </Group>\n                        <Group\n                            x={state.vw - 180}\n                            y={state.vh - 30}\n                        >\n                            <Text\n                                text={`Config:\n  screen: ${state.vw}x${state.vh}\n  scale: ${state.scale}\n`}\n                                fontSize={10}\n                                fill={\"black\"}\n                            />\n                        </Group>\n                    </Layer>                \n                </Stage>\n\t    </div>\n\t</div>\n    );\n}\n\nexport default CamView;\n","import React  from 'react';\nimport './App.css';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\nimport MapView from './MapView';\nimport CamView from './CamView';\n\n\nconst locations = [\n    \"8f38301f7f70d7d1/1\",\n    \"a07345b2737af5f/1\",\n]\n\n\nfunction App() {\n\n    return (\n        <div>\n            <h1>VideoParking</h1>\n            <HashRouter>\n                <nav>\n                    <ul>\n                        <li><Link to=\"/map/52.371809,5.188753\">Map</Link></li>\n                        <li><Link to=\"/cam/8f38301f7f70d7d1/1\">Camera 8f38301f7f70d7d1/1</Link></li>\n                        <li><Link to=\"/cam/a07345b2737af5f/1\">Camera a07345b2737af5f/1</Link></li>\n                    </ul>\n                </nav>\n                <Switch>\n                    <Route path=\"/map/:latLng\">\n                        <MapView />\n                    </Route>\n                    <Route path=\"/cam/:location/:camera/:zone\">\n                        <CamView />\n                    </Route>\n                    <Route path=\"/cam/:location/:camera\">\n                        <CamView />\n                    </Route>\n                    <Route path=\"/\">\n                        <MapView />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import MapApp from './MapApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}