{"version":3,"sources":["api.js","MapView.js","URLImage.js","zonesApi.js","PreviewZonesComponent.js","PreviewDetectionsComponent.js","CamView.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","DefaultIcon","L","icon","iconRetinaUrl","iconRetina","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","Marker","prototype","options","trace","console","log","locations","pos","zones","polygon","location","a","API","get","response","data","MapView","useState","stats","first","state","setState","latLng","useParams","split","map","parseFloat","refreshStats","getStats","then","duration","frameTime","newS","document","title","message","Date","catch","err","retries","useEffect","renewInterval","timer","setTimeout","clearTimeout","MapContainer","center","zoom","scrollWheelZoom","maxZoom","TileLayer","url","attribution","accessToken","s","locationId","loc","zone","markerPos","maxCars","parseInt","cap","pathOptions","fillColor","color","position","Polygon","positions","Popup","toLocaleString","undefined","maximumFractionDigits","to","URLImage","image","error","handleLoad","props","onLoadImage","handleError","this","loadImage","oldProps","src","removeEventListener","window","Image","addEventListener","text","fontSize","fill","x","y","scaleX","scale","scaleY","ref","node","imageNode","React","Component","norm","e","PreviewZonesComponent","loadZones","getZonesData","scaled","descaled","flat","info","name","last_detected_cars","max_detected_cars","ppoints","p","px","i","length","update_zones","zone_name","pi","modified","downloadFile","fileName","fileContent","urlObject","URL","webkitURL","export_blob","Blob","navigator","msSaveBlob","HTMLAnchorElement","Error","save_link","createElementNS","href","createObjectURL","download","obj","ev","createEvent","initMouseEvent","dispatchEvent","fake_click","export_raw","points","stroke","modifiedColor","strokeWidth","closed","radius","draggable","onDragStart","isDragging","onDragEnd","target","handleKeys","onKeyEvent","key","JSON","stringify","setEventKey","PreviewDetectionsComponent","detections","normed","d","object","att_x","bbox_x","bbox_w","att_y","bbox_y","bbox_h","bbox","confidence","toFixed","width","height","calc_vw","Math","max","documentElement","clientWidth","innerWidth","calc_vh","clientHeight","innerHeight","calc_scale","vw","vh","iw","ih","scale_by_w","scale_by_h","min","CamView","picSrc","firstPic","camera","makeStyle","saturation","sec","saturationF","getTime","backgroundImage","backgroundColor","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundPosition","filter","refreshPic","getPicData","style","newState","className","im","changes","updateImageSize","period_for_max","join","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ccad9c2.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://ib9m7jp63g.execute-api.eu-central-1.amazonaws.com/dev/'\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import 'leaflet/dist/leaflet.css';\nimport React, { useState, useEffect }  from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './MapView.css';\nimport API from './api';\nimport { MapContainer, TileLayer, Polygon, Tooltip, Marker, Popup, useMapEvents } from 'react-leaflet';\n\n// see https://github.com/Leaflet/Leaflet/issues/4968\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nlet DefaultIcon = L.icon({\n    iconRetinaUrl: iconRetina,\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [24,36],\n    iconAnchor: [12,36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst trace = console.log;\n\nconst locations = {\n    \"8f38301f7f70d7d1/1\": {\n        pos: [52.371809, 5.188753],\n        zones: {\n            \"a\": {\n                polygon: [\n                    [52.371880, 5.1887],\n                    [52.371822, 5.18895],\n                    [52.371754, 5.18890],\n                    [52.371803, 5.188663]\n                ]\n            },\n            \"b\": {\n                polygon: [\n                    [52.372080, 5.188689],\n                    [52.372062, 5.188753],\n                    [52.371978, 5.188710],\n                    [52.371993, 5.188643]\n                ]\n            }\n        }\n    }, // 52.371809, 5.188753 -- 52*22'18.5\"N 5*11'19.5\"E\n    //\"a07345b2737af5f/1\": {},\n}\n\nasync function getStats(location) {\n    if (!location) {\n        return;\n    }\n    \n    const response = await API.get(`view?location=${location}`);\n    console.log(\"response:\", response);\n    return response.data;\n\n    // return new Promise( (resolutionFunc,rejectionFunc) => {\n    //     resolutionFunc({\n    //         \"frameTime\": \"2020-11-29T23:56:20.437Z\",\n    //         \"expiresAt\": \"2020-11-30T00:06:20.437Z\",\n    //         \"duration\": 60,\n    //         \"renewAfter\": \"2020-11-30T00:02:20.437Z\",\n    //         \"message\": \"You are ace\",\n    //         \"stats\": [\n    //             {\n    //                 \"location\": \"8f38301f7f70d7d1\",\n    //                 \"camera\": \"1\",\n    //                 \"zone\": \"_unknown\",\n    //                 \"time\": \"2020-11-27 14:20:00.000000000\",\n    //                 \"last_detected_cars\": \"0\",\n    //                 \"period_for_max\": \"3 15:27:00.000000000\",\n    //                 \"max_detected_cars\": \"9\"\n    //             },\n    //             {\n    //                 \"location\": \"8f38301f7f70d7d1\",\n    //                 \"camera\": \"1\",\n    //                 \"zone\": \"a\",\n    //                 \"time\": \"2020-11-29 23:56:00.000000000\",\n    //                 \"last_detected_cars\": \"8\",\n    //                 \"period_for_max\": \"6 23:53:00.000000000\",\n    //                 \"max_detected_cars\": \"11\"\n    //             },\n    //             {\n    //                 \"location\": \"8f38301f7f70d7d1\",\n    //                 \"camera\": \"1\",\n    //                 \"zone\": \"b\",\n    //                 \"time\": \"2020-11-29 23:56:00.000000000\",\n    //                 \"last_detected_cars\": \"1\",\n    //                 \"period_for_max\": \"6 23:53:00.000000000\",\n    //                 \"max_detected_cars\": \"3\"\n    //             }\n    //         ]\n    //     });\n    // });\n}\n\n\nfunction MapView() {\n\n    const [state, setState] = useState({\n        stats: [],\n\tfirst: true,\n        location: \"8f38301f7f70d7d1/1\", // TODO: Add location(s) detection for visible area at lat lon\n    });\n\n    const { latLng } = useParams();\n\n    if (latLng && latLng !== state.latLng) {\n        const pos = latLng.split(\",\").map(parseFloat);\n        console.log(\"pos:\", pos);\n        setState({\n            ...state,\n            latLng: latLng,\n            pos: pos,\n        });\n    }\n\n    const refreshStats = () => {\n\tgetStats(state.location).then(data => {\n            if (data) {\n\t        trace(data);\n\t        const duration = (data.duration ? data.duration : 60);\n                const frameTime = data.frameTime;\n                const newS = {\n                    ...state,\n\t\t    first: false,\n\t\t    duration: duration,\n                    frameTime: frameTime,\n                    stats: data.stats || [],\n\t        };\n                console.log(newS);\n\t        setState(newS);\n\t        document.title = data.message + `, parking at ${state.location} ${new Date(frameTime)}`;\n            }\n\t}).catch(err => {\n            console.log(err);\n\t    const duration = 30;\n            const retries = state.retries ? (state.retries + 1) : 0;\n\t    setState({\n                ...state,\n\t\tfirst: false,\n\t\tduration: duration,\n                retries: retries,\n                stats: [],\n\t    });\n\t    document.title = `Retrying (${retries})` + (state.frameTime ? ` from ${state.frameTime} ...` : '...');\n        });\n    };\n\t\t\n    useEffect(() => {\n\tconst renewInterval = state.first ? 0 : state.duration;\n\tconsole.log('Timeout till renew:', renewInterval);\n\tconst timer = setTimeout(refreshStats, renewInterval*1000);\n\t// Clear timeout if the component is unmounted\n\treturn () => {\n            console.log(\"Stopping renewal of MapView\");\n            clearTimeout(timer);\n        };\n    });\n\n    const startLocation = locations[\"8f38301f7f70d7d1/1\"];\n\n    /*\n    function LocationMarker() {\n        const [position, setPosition] = useState(null)\n        const map = useMapEvents({\n            click() {\n                map.locate()\n            },\n            locationfound(e) {\n                setPosition(e.latlng)\n                map.flyTo(e.latlng, map.getZoom())\n            },\n        })\n\n        return position === null ? null : (\n            <Marker position={position}>\n                <Popup>You are here</Popup>\n            </Marker>\n        )\n    }\n    */\n\n    const Zones = (stats) => {\n        return (\n            stats.map((s) => {\n                const locationId = s[\"location\"]+\"/\"+s[\"camera\"];\n                const loc = locations[locationId];\n                if (loc) {\n                    trace(loc);\n                    const zone = loc.zones[s[\"zone\"]];\n                    if (zone) {\n                        trace(zone);\n                        const markerPos = zone.polygon[0];\n                        trace(markerPos);\n                        const maxCars = parseInt(s[\"max_detected_cars\"]);\n                        const lastCars = parseInt(s[\"last_detected_cars\"]);\n                        const cap = lastCars/maxCars;\n                        trace(cap);\n                        var pathOptions = { fillColor: 'blue', color: 'blue' };\n                        if (cap < 0.5) { pathOptions = { fillColor: 'green', color: 'green' } }\n                        else if (cap < 0.8) { pathOptions = { fillColor: 'red', color: 'red' } }\n                        else if (cap < 1.1) { pathOptions = { fillColor: 'black', color: 'black' } }\n                        \n                        return (\n                            <div key={locationId+\"-\"+s[\"zone\"]} >\n                                <Marker position={markerPos} />\n                                <Polygon\n                                    pathOptions={pathOptions}\n                                    positions={zone.polygon}\n                                >\n                                    <Popup>\n                                        {s[\"last_detected_cars\"]} cars parked by {s[\"time\"]} <br />\n                                        {s[\"max_detected_cars\"]} max (for period of {s[\"period_for_max\"]}) <br />\n                                        {(100*cap).toLocaleString(undefined, {maximumFractionDigits:0})+'%'} filled <br />\n                                        <Link to={\"/cam/\"+s[\"location\"]+\"/\"+s[\"camera\"]+\"/\"+s[\"zone\"]}>view</Link>\n                                    </Popup>\n                                    {/*\n                                       <Tooltip direction=\"bottom\"\n                                       offset={[0, 0]}\n                                       opacity={1}\n                                       permanent\n                                       >\n                                       {s[\"last_detected_cars\"]}/{s[\"max_detected_cars\"]}\n                                       </Tooltip>\n                                     */}\n                                </Polygon>\n                            </div>\n                        );\n                    } else {\n                        trace(s[\"zone\"]);\n                        return null;\n                    }\n                } else {\n                    trace(locationId);\n                    return null;\n                }\n            })\n        );\n    }\n    \n    return (\n        <MapContainer\n            center={state.pos || [52.371809, 5.188753]}\n            zoom={19}\n            scrollWheelZoom={false}\n            maxZoom={20}\n        >\n            <TileLayer\n                url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token={accessToken}\"\n                attribution='<a href=\"http://videoparking.live/copyright\">VideoParking.live</a> | Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery &copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n                accessToken=\"pk.eyJ1IjoidmlkZW9wYXJraW5nIiwiYSI6ImNraTZqa2QycTBmY2EzMG1xZ2R4eGpqaGMifQ.LG9VLK74nBfMJsoxpLQhxg\"\n                maxZoom={20}\n            />\n            {/*<LocationMarker />*/}\n            {Zones(state.stats)}\n        </MapContainer>\n    );\n}\n\nexport default MapView;\n","import React from 'react';\nimport {Image, Text} from 'react-konva';\n\n// custom component that will handle loading image from url\n// you may add more logic here to handle \"loading\" state\n// or if loading is failed\n// VERY IMPORTANT NOTES:\n// at first we will set image state to null\n// and then we will set it to native image instance when it is loaded\nclass URLImage extends React.Component {\n    state = {\n        image: null,\n        error: undefined\n    };\n    componentDidMount() {\n        this.loadImage();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.src !== this.props.src) {\n            this.loadImage();\n        }\n    }\n    componentWillUnmount() {\n        this.image.removeEventListener('load', this.handleLoad);\n    }\n    loadImage() {\n        if (this.props.src) {\n            // save to \"this\" to remove \"load\" handler on unmount\n            this.image = new window.Image();\n            this.image.src = this.props.src;\n            this.image.addEventListener('load', this.handleLoad);\n            this.image.addEventListener('error', this.handleError);\n        } else {\n            this.image = undefined;\n        }\n    }\n    handleLoad = () => {\n        // after setState react-konva will update canvas and redraw the layer\n        // because \"image\" property is changed\n        this.setState({\n            image: this.image,\n            error: undefined\n        });\n        // if you keep same image object during source updates\n        // you will have to update layer manually:\n        // this.imageNode.getLayer().batchDraw();\n        if (this.props.onLoadImage) {\n            this.props.onLoadImage(this.image);\n        }\n    };\n    handleError = (err) => {\n        this.setState({\n            error: \"Loading...\",\n        });\n    };\n    render() {\n        if (this.state.error !== undefined) {\n            return (\n                <Text\n                    text={this.state.error}\n                    fontSize={20}\n                    fill={\"red\"}\n                />\n            );\n        } else {\n            return (\n                <Image\n                    x={0}\n                    y={0}\n                    image={this.state.image}\n                    scaleX={this.props.scale}\n                    scaleY={this.props.scale}\n                    ref={node => {\n                        this.imageNode = node;\n                    }}\n                />\n            );\n        }\n    }\n}\n\nexport default URLImage;\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://raw.githubusercontent.com/videoparking/zones/master/v1/',\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import React, { useState, useEffect } from 'react';\nimport Konva from 'konva';\nimport {Shape, Group, Text, Line, Circle} from 'react-konva';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport API from './zonesApi';\n\n\nasync function getZonesData(location) {\n    if (location) {\n        const response = await API.get(`${location}/zones-v1.json`);\n        console.log(\"response:\", response);\n        return response.data;\n    } else {\n        return undefined;\n    }\n}\n\nfunction norm(stats) {\n    const s = {};\n    stats.map(e =>\n        s[e.zone] = e\n    );\n    return s;\n}\n\nconst PreviewZonesComponent = (props) => {\n    const [state, setState] = useState({\n        zones: [],\n        stats: norm(props.stats),\n    });\n\n    useEffect(() => {\n        loadZones();\n    }, [props.location]);\n\n    useEffect(() => {\n        setState({\n            ...state,\n            stats: norm(props.stats),\n        });\n    }, [props.stats]);\n    \n    const loadZones = () => {\n        getZonesData(props.location).then(data => {\n            console.log(data);\n            setState({\n                zones: data.zones,\n                stats: norm(props.stats),\n            });\n        }).catch(err => {\n            console.log(\"ERROR:\",err);\n            setState({\n                zones: [],\n            });\n        });\n    };\n\n    const scaled = (e) => e * props.scale;\n    const descaled = (e) => e / props.scale;\n\n    const polygon = (zone) => {\n        return zone.polygon.map(([x,y]) => [scaled(x), scaled(y)]).flat();\n    }\n    \n    const info = (name) => {\n        if (state.stats) {\n            const stats = state.stats[name];\n            if (stats) {\n                return `${name} ${stats.last_detected_cars}/${stats.max_detected_cars}`;\n            } else {\n                return name;\n            }\n        }\n    };\n\n    const ppoints = (zone) => {\n        const p = zone.polygon;\n        var px = [];\n        for (var i = 0; i < p.length; i++) {\n            const [x,y] = p[i];\n            px[i] = {x:x,y:y,i:i};\n        }\n        console.log(\"ppoints:\", px);\n        return px;\n    }\n\n    const update_zones = (zone_name, pi, x, y) => {\n        var zones = []\n        for (var i = 0; i < state.zones.length; i++) {\n            const zone = state.zones[i];\n            if (zone.name === zone_name) {\n                zone.polygon[pi] = [x,y];\n                zone.modified = true;\n            }\n            zones[i] = zone;\n        }\n        return zones;\n    }\n\n    const setEventKey = (key) => {\n        console.log(\"key:\", key);\n        if (key === \"e\") {\n            downloadFile(`${props.location}/zones-v1.json`, JSON.stringify(state.zones));\n        }\n    }\n\n    /**\n     * See https://github.com/axetroy/react-download/blob/master/src/react-download.jsx\n     */\n    const downloadFile = (fileName, fileContent) => {\n        function fake_click(obj) {\n            let ev = document.createEvent(\"MouseEvents\");\n            ev.initMouseEvent(\n                \"click\",\n                true,\n                false,\n                window,\n                0,\n                0,\n                0,\n                0,\n                0,\n                false,\n                false,\n                false,\n                false,\n                0,\n                null\n            );\n            obj.dispatchEvent(ev);\n        }\n        function export_raw(name, data) {\n            let urlObject = window.URL || window.webkitURL || window;\n            let export_blob = new Blob([data]);\n\n            if ('msSaveBlob' in navigator) {\n                // Prefer msSaveBlob if available - Edge supports a[download] but\n                // ignores the filename provided, using the blob UUID instead.\n                // msSaveBlob will respect the provided filename\n                navigator.msSaveBlob(export_blob, name);\n            } else if ('download' in HTMLAnchorElement.prototype) {\n                let save_link = document.createElementNS(\n                    \"http://www.w3.org/1999/xhtml\",\n                    \"a\"\n                );\n                save_link.href = urlObject.createObjectURL(export_blob);\n                save_link.download = name;\n                fake_click(save_link);\n            } else {\n                throw new Error(\"Neither a[download] nor msSaveBlob is available\");\n            }\n        }\n        export_raw(fileName, fileContent);\n    }\n    \n    return (\n        state.zones.map((zone) =>\n            <Group\n                key={zone.name}\n                x={0}\n                y={0}\n            >\n                <Text\n                    text={info(zone.name)}\n                    x={3 + zone.polygon[0][0] * props.scale}\n                    y={zone.polygon[0][1] * props.scale}\n                    fontSize={10}\n                    fill={props.color}\n                />\n                <Line\n                    points={polygon(zone)}\n                    stroke={zone.modified ? props.modifiedColor : props.color}\n                    strokeWidth={1}\n                    closed={true}\n                />\n                {ppoints(zone).map(({x,y,i}) =>\n                    <Circle\n                        key={zone.name + \"-p-\" + i}\n                        x={scaled(x)}\n                        y={scaled(y)}\n                        radius={5}\n                        fill={zone.modified ? props.modifiedColor : props.color}\n                        draggable\n                        onDragStart={() => {\n                            setState({\n                                ...state,\n                                isDragging: true\n                            });\n                        }}\n                        onDragEnd={e => {\n                            console.log(\">>>>\", e);\n                            setState({\n                                ...state,\n                                isDragging: false,\n                                zones: update_zones(zone.name, i, descaled(e.target.x()), descaled(e.target.y())),\n                            });\n                        }}\n                    />\n                )}\n                <KeyboardEventHandler handleKeys={['e']} onKeyEvent={(key, e) => setEventKey(key)}/>\n            </Group>\n        )\n    );\n}\n\n\nexport default PreviewZonesComponent;\n","import React from 'react';\nimport {Rect, Text, Group} from 'react-konva';\n\n\nclass PreviewDetectionsComponent extends React.Component {\n    state = {\n        detections: this.props.detections.map((e) => this.norm(e)),\n    };\n    componentDidMount() {\n        //\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.detections !== this.props.detections) {\n            const normed = this.props.detections.map((e) => this.norm(e))\n            this.setState({\n                detections: normed\n            });\n        }\n    }\n    componentWillUnmount() {\n        //\n    }\n    norm(d) {\n        const dn = {\n            \"object\": d.object,\n            \"confidence\": parseFloat(d[\"measure_value\"]),\n            \"bbox\": {\n                \"x\": parseInt(d.att_x) + parseInt(d.bbox_x) - parseInt(d.bbox_w)/2,\n                \"y\": parseInt(d.att_y) + parseInt(d.bbox_y) - parseInt(d.bbox_h)/2,\n                \"width\": parseInt(d.bbox_w),\n                \"height\": parseInt(d.bbox_h),\n            },\n        };\n        return (dn);\n    }\n    scaled(e) {\n        return e * this.props.scale;\n    }\n    render() {\n        return (\n            this.state.detections.map(d =>\n                <Group\n                    key={d.confidence} // hope confidence will differ at least in grains\n                    x={this.scaled(d.bbox.x)}\n                    y={this.scaled(d.bbox.y)}\n                >\n                    <Text\n                        text={d.object + \" \" + d.confidence.toFixed(2)}\n                        x={3}\n                        fontSize={10}\n                        fill={this.props.color}\n                    />\n                    <Rect\n                        width={this.scaled(d.bbox.width)}\n                        height={this.scaled(d.bbox.height)}\n                        stroke={this.props.color}\n                        strokeWidth={1}\n                    />\n                </Group>\n            )\n        );\n    }\n}\n\nexport default PreviewDetectionsComponent;\n","import React, { useState, useEffect }  from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CamView.css';\nimport API from './api';\nimport URLImage from './URLImage'\nimport PreviewZonesComponent from './PreviewZonesComponent'\nimport PreviewDetectionsComponent from './PreviewDetectionsComponent'\nimport {Layer, Stage, Text, Group} from 'react-konva';\n\nconst trace = console.log;\n\n// const detections_sample = [\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"376\",\n//         \"bbox_h\": \"309\",\n//         \"bbox_x\": \"1310\",\n//         \"bbox_y\": \"324\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218345642,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"379\",\n//         \"bbox_h\": \"269\",\n//         \"bbox_x\": \"2115\",\n//         \"bbox_y\": \"265\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218342,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },    \n// ];\n\n\nasync function getPicData(location) {\n    const response = await API.get(`view?location=${location}&image=yes&detections=yes`);\n    console.log(\"response:\", response);\n    return response.data;\n\n    // return new Promise( (resolutionFunc,rejectionFunc) => {\n    // \t\tresolutionFunc({\n    // \t\t\t\timage: { url: \"https://www.ima-home.be/layout/uploads/2020/06/ima-slide1.jpg\" },\n    // \t\t\t\tmessage: \"xxxxx\",\n    // \t\t});\n    // });\n}\n\nfunction calc_vw() {\n    return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n}\n\nfunction calc_vh() {\n    return Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n}\n\nfunction calc_scale(vw, vh, iw, ih) {\n    if (vw && vh && iw && ih) {\n        const scale_by_w = vw/iw;\n        const scale_by_h = vh/ih;\n        return Math.min(scale_by_w, scale_by_h);\n    } else {\n        return 0.25;\n    }\n}\n\nfunction CamView() {\n\n    const [state, setState] = useState({\n\tpicSrc: undefined,\n\tfirstPic: true,\n        vw: calc_vw(),\n        vh: calc_vh(),\n        scale: calc_scale(calc_vw(), calc_vh()),\n        detections: [],\n        stats: [],\n    });\n\n    const { location, camera } = useParams();\n\n    const makeStyle = (url, frameTime) => {\n        // See:\n        // - https://css-tricks.com/almanac/properties/f/filter/\n        // - https://css-tricks.com/gooey-effect/\n        // - https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n        const now = new Date();\n        const frameAge = (now.getTime() - new Date(frameTime).getTime())/1000; // in sec\n        const expectedAge = 5 + 60; // sec\n        const blur = 0;\n\n        const saturationF = (sec) => {\n            /*\n             * Saturation [0-100] for:\n             *   - 1 min is 100% (full color)\n             *   - 5 min is 0% (no colors)\n             */\n            const x = sec / 60.0; // min, fractions\n            return Math.max(0, Math.min(100, 100 - 25 * x));\n        }\n\n        const saturation = saturationF(frameAge - expectedAge);\n\n        return {\n            backgroundImage:`url(${url})`,\n            backgroundColor: '#282c34',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundAttachment: 'fixed',\n            backgroundPosition: 'center',\n            filter: `blur(${blur}px) saturate(${saturation}%)`,\n        };\n    };\n\n    const refreshPic = () => {\n\tgetPicData(location + \"/\" + camera).then(data => {\n\t    trace(data);\n\t    const duration = (data.duration ? data.duration : 60);\n            const url = data.image.url;\n            const frameTime = data.frameTime;\n            const style = makeStyle(url, frameTime);\n            //console.log(\">>>>>\", url);\n            const newState = {\n                ...state,\n\t\tpicSrc: url,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                frameTime: frameTime,\n                style: style,\n                detections: data.detections || [],\n                stats: data.stats || [],\n\t    }\n\t    setState(newState);\n\t    document.title = data.message + `, parking at ${location}/${camera} ${new Date(frameTime)}`;\n\t}).catch(err => {\n            console.log(err);\n\t    const duration = 30;\n            const style = makeStyle(state.picSrc, state.frameTime);\n            const retries = state.retries ? (state.retries + 1) : 0;\n\t    setState({\n                ...state,\n\t\tpicSrc: state.picSrc,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                style: style,\n                retries: retries,\n                detections: [],\n                stats: [],\n\t    });\n\t    document.title = `Retrying (${retries})` + (state.frameTime ? ` from ${state.frameTime} ...` : '...');\n        });\n    };\n\n    if (location !== state.location || camera !== state.camera) {\n        setState({\n            ...state,\n\t    firstPic: true,\n            location: location,\n            camera: camera,\n\t});\n\t//refreshPic();\n    }\n\n    useEffect(() => {\n\tconst renewInterval = state.firstPic ? 0 : state.duration;\n\tconsole.log('Timeout till renew:', renewInterval);\n\tconst timer = setTimeout(refreshPic, renewInterval*1000);\n\t// Clear timeout if the component is unmounted\n\treturn () => {\n            console.log(\"Stopping renewal of CamView\");\n            clearTimeout(timer);\n        };\n    });\n\n    const updateImageSize = (im) => {\n        const vw = calc_vw();\n        const vh = calc_vh();\n        const iw = im ? im.width : state.iw;\n        const ih = im ? im.height : state.ih;\n        const scale = calc_scale(vw,vh,iw,ih);\n        if (iw !== state.iw || ih !== state.ih ||\n            vw !== state.vw || vh !== state.vh ||\n            scale !== state.scale\n           ) {\n            const changes = {\n                vw: vw,\n                vh: vh,\n                iw: iw,\n                ih: ih,\n                scale: scale,\n            };\n            console.log(\"[!] New state changes:\", changes);\n            setState({\n                ...state,\n                ...changes,\n\t    });\n        }\n    }\n\n    return (\n\t<div className=\"CamView\"\n\t>\n\t    <div className=\"CamView-header\">\n                <Stage\n                    width={state.vw}\n                    height={state.vh}\n                    style={{backgroundColor:'dimgray'}}\n                >\n                    <Layer>\n                        <URLImage\n                            src={state.picSrc}\n                            scale={state.scale}\n                            onLoadImage={(i) => updateImageSize(i)}\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewZonesComponent\n                            location={location + \"/\" + camera}\n                            stats={state.stats}\n                            scale={state.scale}\n                            color=\"magenta\"\n                            modifiedColor=\"red\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewDetectionsComponent\n                            detections={state.detections}\n                            scale={state.scale}\n                            color=\"yellow\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <Group\n                            x={state.vw - 200}\n                            y={3}\n                        >\n                            <Text\n                                text={`Info:\n  location: ${location}\n  camera: ${camera}\n  frame time: ${state.frameTime}\n  detections: ${state.detections.length}\n  zones:\n    ` + state.stats.map(stats => `${stats.zone}: ${stats.last_detected_cars}/${stats.max_detected_cars} [max of ${stats.period_for_max}]`).join(`\n    `)}\n                                fontSize={10}\n                                fill={\"magenta\"}\n                            />\n                        </Group>\n                        <Group\n                            x={state.vw - 180}\n                            y={state.vh - 100}\n                        >\n                            <Text\n                                text={`Config:\n  screen: ${state.vw}x${state.vh}\n  scale: ${state.scale}\n\nKeys:\n  'e': export zones\n\nHelp:\n  - Move zone edge points with mouse\n`}\n                                fontSize={10}\n                                fill={\"black\"}\n                            />\n                        </Group>\n                    </Layer>                \n                </Stage>\n\t    </div>\n\t</div>\n    );\n}\n\nexport default CamView;\n","import React  from 'react';\nimport './App.css';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\nimport MapView from './MapView';\nimport CamView from './CamView';\n\n\nconst locations = [\n    \"8f38301f7f70d7d1/1\",\n    \"a07345b2737af5f/1\",\n]\n\n\nfunction App() {\n\n    return (\n        <div>\n            <h1>VideoParking</h1>\n            <HashRouter>\n                <nav>\n                    <ul>\n                        <li><Link to=\"/map/52.371809,5.188753\">Map</Link></li>\n                        <li><Link to=\"/cam/8f38301f7f70d7d1/1\">Camera 8f38301f7f70d7d1/1</Link></li>\n                        <li><Link to=\"/cam/a07345b2737af5f/1\">Camera a07345b2737af5f/1</Link></li>\n                    </ul>\n                </nav>\n                <Switch>\n                    <Route path=\"/map/:latLng\">\n                        <MapView />\n                    </Route>\n                    <Route path=\"/cam/:location/:camera/:zone\">\n                        <CamView />\n                    </Route>\n                    <Route path=\"/cam/:location/:camera\">\n                        <CamView />\n                    </Route>\n                    <Route path=\"/\">\n                        <MapView />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import MapApp from './MapApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}