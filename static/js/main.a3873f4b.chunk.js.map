{"version":3,"sources":["api.js","URLImage.js","zonesApi.js","PreviewZonesComponent.js","PreviewDetectionsComponent.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","URLImage","state","image","error","undefined","handleLoad","setState","handleError","err","this","loadImage","oldProps","src","props","removeEventListener","window","Image","addEventListener","text","fontSize","fill","x","y","scaleX","scale","scaleY","ref","node","imageNode","React","Component","trace","console","log","location","a","API","get","response","data","norm","stats","s","map","e","zone","PreviewZonesComponent","zones","loadZones","getZonesData","then","catch","scaled","ctx","p","polygon","beginPath","moveTo","i","length","lineTo","closePath","fillStrokeShape","name","last_detected_cars","max_detected_cars","info","color","stroke","strokeWidth","sceneFunc","drawPolygon","PreviewDetectionsComponent","detections","normed","d","object","parseFloat","parseInt","att_x","bbox_x","bbox_w","att_y","bbox_y","bbox_h","bbox","confidence","toFixed","width","height","locations","calc_vw","Math","max","document","documentElement","clientWidth","innerWidth","calc_vh","clientHeight","innerHeight","App","useState","picSrc","firstPic","vw","vh","makeStyle","url","frameTime","saturation","sec","min","saturationF","Date","getTime","backgroundImage","backgroundColor","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundPosition","filter","refreshPic","getPicData","duration","style","newState","title","message","retries","useEffect","renewInterval","timer","setTimeout","clearTimeout","bind","useDoubleTap","event","next","indexOf","setNextLocation","className","period_for_max","join","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3873f4b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://ib9m7jp63g.execute-api.eu-central-1.amazonaws.com/dev/'\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import React from 'react';\nimport {Konva, Image, Text} from 'react-konva';\n\n// custom component that will handle loading image from url\n// you may add more logic here to handle \"loading\" state\n// or if loading is failed\n// VERY IMPORTANT NOTES:\n// at first we will set image state to null\n// and then we will set it to native image instance when it is loaded\nclass URLImage extends React.Component {\n    state = {\n        image: null,\n        error: undefined\n    };\n    componentDidMount() {\n        this.loadImage();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.src !== this.props.src) {\n            this.loadImage();\n        }\n    }\n    componentWillUnmount() {\n        this.image.removeEventListener('load', this.handleLoad);\n    }\n    loadImage() {\n        // save to \"this\" to remove \"load\" handler on unmount\n        this.image = new window.Image();\n        this.image.src = this.props.src;\n        this.image.addEventListener('load', this.handleLoad);\n        this.image.addEventListener('error', this.handleError);\n    }\n    handleLoad = () => {\n        // after setState react-konva will update canvas and redraw the layer\n        // because \"image\" property is changed\n        this.setState({\n            image: this.image,\n            error: undefined\n        });\n        // if you keep same image object during source updates\n        // you will have to update layer manually:\n        // this.imageNode.getLayer().batchDraw();\n    };\n    handleError = (err) => {\n        this.setState({\n            error: \"Loading...\",\n        });\n    };\n    render() {\n        if (this.state.error != undefined) {\n            return (\n                <Text\n                    text={this.state.error}\n                    fontSize={20}\n                    fill={\"red\"}\n                />\n            );\n        } else {\n            return (\n                <Image\n                    x={0}\n                    y={0}\n                    image={this.state.image}\n                    scaleX={this.props.scale}\n                    scaleY={this.props.scale}\n                    ref={node => {\n                        this.imageNode = node;\n                    }}\n                />\n            );\n        }\n    }\n}\n\nexport default URLImage;\n","import axios from 'axios';\n\nconst BASE_URL = process.env.PUBLIC_URL;\n// const BASE_URL = 'https://github.com/videoparking/zones/raw/main/videoparking_zones/data/v1/'; // Not working due to CORS\n\nexport default axios.create({\n    baseURL: BASE_URL + '/zones-data/v1/'\n//      baseURL: 'https://httpbin.org/status/404'\n});\n","import React from 'react';\nimport {Konva, Shape, Group, Text} from 'react-konva';\nimport API from './zonesApi';\n\nconst trace = console.log;\n\nasync function getZonesData(location) {\n    const response = await API.get(`${location}/zones-v1.json`);\n    console.log(\"response:\", response);\n    return response.data;\n}\n\nfunction norm(stats) {\n    const s = {};\n    stats.map(e =>\n        s[e.zone] = e\n    );\n    return s;\n}\n\nclass PreviewZonesComponent extends React.Component {\n    state = {\n        zones: [],\n        stats: norm(this.props.stats),\n    };\n    componentDidMount() {\n        this.loadZones();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.location !== this.props.location) {\n            this.loadZones();\n        } else if (oldProps.stats !== this.props.stats) {\n            this.setState({\n                ...this.state,\n                stats: norm(this.props.stats),\n            });\n        }\n    }\n    componentWillUnmount() {\n        ///\n    }\n    loadZones() {\n        getZonesData(this.props.location).then(data => {\n            trace(data);\n            this.setState({\n                zones: data.zones,\n                stats: norm(this.props.stats),\n            });\n        }).catch(err => {\n            console.log(\"ERROR:\",err);\n            this.setState({\n                zones: [],\n            });\n        });\n    }\n    drawPolygon(zone) {\n        const scaled = (e) =>  e * this.props.scale;\n        function func(ctx) {\n            if (zone) {\n                const p = zone.polygon;\n                ctx.beginPath();\n                ctx.moveTo(scaled(p[0][0]), scaled(p[0][1]));\n                for (var i = 1; i < p.length; i++) {\n                    ctx.lineTo(scaled(p[i][0]), scaled(p[i][1]));\n                }\n                ctx.closePath();\n                // Konva specific method\n                ctx.fillStrokeShape(this);\n            } else {\n                console.log(\"no zones to preview\");\n            }\n        }\n        return func;\n    }\n    info(name) {\n        if (this.state.stats) {\n            const stats = this.state.stats[name];\n            if (stats) {\n                return `${name} ${stats.last_detected_cars}/${stats.max_detected_cars}`;\n            } else {\n                return name;\n            }\n        }\n    }\n    render() {\n        return (\n            this.state.zones.map((zone) =>\n                <Group\n                    key={zone.name}\n                    x={0}\n                    y={0}\n                >\n                    <Text\n                        text={this.info(zone.name)}\n                        x={3 + zone.polygon[0][0] * this.props.scale}\n                        y={zone.polygon[0][1] * this.props.scale}\n                        fontSize={10}\n                        fill={this.props.color}\n                    />\n                    <Shape\n                        stroke={this.props.color}\n                        strokeWidth={1}\n                        sceneFunc={this.drawPolygon(zone)}\n                    />\n                </Group>\n            )\n        );\n    }\n}\n\n\nexport default PreviewZonesComponent;\n","import React from 'react';\nimport {Rect, Text, Group} from 'react-konva';\n\n\nclass PreviewDetectionsComponent extends React.Component {\n    state = {\n        detections: this.props.detections.map((e) => this.norm(e)),\n    };\n    componentDidMount() {\n        //\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.detections !== this.props.detections) {\n            const normed = this.props.detections.map((e) => this.norm(e))\n            this.setState({\n                detections: normed\n            });\n        }\n    }\n    componentWillUnmount() {\n        //\n    }\n    norm(d) {\n        const dn = {\n            \"object\": d.object,\n            \"confidence\": parseFloat(d[\"measure_value\"]),\n            \"bbox\": {\n                \"x\": parseInt(d.att_x) + parseInt(d.bbox_x) - parseInt(d.bbox_w)/2,\n                \"y\": parseInt(d.att_y) + parseInt(d.bbox_y) - parseInt(d.bbox_h)/2,\n                \"width\": parseInt(d.bbox_w),\n                \"height\": parseInt(d.bbox_h),\n            },\n        };\n        return (dn);\n    }\n    scaled(e) {\n        return e * this.props.scale;\n    }\n    render() {\n        return (\n            this.state.detections.map(d =>\n                <Group\n                    key={d.confidence} // hope confidence will differ at least in grains\n                    x={this.scaled(d.bbox.x)}\n                    y={this.scaled(d.bbox.y)}\n                >\n                    <Text\n                        text={d.object + \" \" + d.confidence.toFixed(2)}\n                        x={3}\n                        fontSize={10}\n                        fill={this.props.color}\n                    />\n                    <Rect\n                        width={this.scaled(d.bbox.width)}\n                        height={this.scaled(d.bbox.height)}\n                        stroke={this.props.color}\n                        strokeWidth={1}\n                    />\n                </Group>\n            )\n        );\n    }\n}\n\nexport default PreviewDetectionsComponent;\n","import React, { useState, useEffect }  from 'react';\nimport './App.css';\nimport API from './api';\nimport URLImage from './URLImage'\nimport PreviewZonesComponent from './PreviewZonesComponent'\nimport PreviewDetectionsComponent from './PreviewDetectionsComponent'\nimport {Layer, Stage, Text, Group} from 'react-konva';\nimport { useDoubleTap } from 'use-double-tap';\n\nconst trace = console.log;\n\nconst locations = [\n    \"8f38301f7f70d7d1/1\",\n    \"a07345b2737af5f/1\",\n]\n\n// const detections_sample = [\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"376\",\n//         \"bbox_h\": \"309\",\n//         \"bbox_x\": \"1310\",\n//         \"bbox_y\": \"324\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218345642,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },\n//     {\n//         \"zone\": \"a\",\n//         \"bbox_w\": \"379\",\n//         \"bbox_h\": \"269\",\n//         \"bbox_x\": \"2115\",\n//         \"bbox_y\": \"265\",\n//         \"att_y\": \"1300\",\n//         \"att_x\": \"0\",\n//         \"location\": \"8f38301f7f70d7d1\",\n//         \"camera\": \"1\",\n//         \"detector_hostname\": \"videoparking-detector-67cf67cd55-8kmll\",\n//         \"object\": \"car\",\n//         \"measure_value\": 0.7678198218342,\n//         \"measure_name\": \"confidence\",\n//         \"time\": \"2020-11-16 00:38:00.000000000\"\n//     },    \n// ];\n\n\nasync function getPicData(location) {\n    const response = await API.get(`view?location=${location}`);\n    console.log(\"response:\", response);\n    return response.data;\n\n    // return new Promise( (resolutionFunc,rejectionFunc) => {\n    // \t\tresolutionFunc({\n    // \t\t\t\turl: \"https://www.ima-home.be/layout/uploads/2020/06/ima-slide1.jpg\",\n    // \t\t\t\tmessage: \"xxxxx\",\n    // \t\t});\n    // });\n}\n\nfunction calc_vw() {\n    return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n}\n\nfunction calc_vh() {\n    return Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n}\n\nfunction App() {\n    const [state, setState] = useState({\n\tpicSrc: undefined,\n\tfirstPic: true,\n        location: locations[0],\n        vw: calc_vw(),\n        vh: calc_vh(),\n        scale: 0.25,\n        detections: [],\n        stats: [],\n    });\n\n    const makeStyle = (url, frameTime) => {\n        // See:\n        // - https://css-tricks.com/almanac/properties/f/filter/\n        // - https://css-tricks.com/gooey-effect/\n        // - https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n        const now = new Date();\n        const frameAge = (now.getTime() - new Date(frameTime).getTime())/1000; // in sec\n        const expectedAge = 5 + 60; // sec\n        const blur = 0;\n\n        const saturationF = (sec) => {\n            /*\n             * Saturation [0-100] for:\n             *   - 1 min is 100% (full color)\n             *   - 5 min is 0% (no colors)\n             */\n            const x = sec / 60.0; // min, fractions\n            return Math.max(0, Math.min(100, 100 - 25 * x));\n        }\n\n        const saturation = saturationF(frameAge - expectedAge);\n\n        return {\n            backgroundImage:`url(${url})`,\n            backgroundColor: '#282c34',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundAttachment: 'fixed',\n            backgroundPosition: 'center',\n            filter: `blur(${blur}px) saturate(${saturation}%)`,\n        };\n    };\n\n    const refreshPic = () => {\n\tgetPicData(state.location).then(data => {\n\t    trace(data);\n\t    const duration = (data.duration ? data.duration : 60);\n            const url = data.url;\n            const frameTime = data.frameTime;\n            const style = makeStyle(url, frameTime);\n            //console.log(\">>>>>\", url);\n            const newState = {\n                ...state,\n\t\tpicSrc: url,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                frameTime: frameTime,\n                style: style,\n                vw: calc_vw(),\n                vh: calc_vh(),\n                detections: data.detections || [],\n                stats: data.stats || [],\n\t    }\n            console.log(newState);\n\t    setState(newState);\n\t    document.title = data.message + `, parking at ${state.location} ${new Date(frameTime)}`;\n\t}).catch(err => {\n            console.log(err);\n\t    const duration = 30;\n            const style = makeStyle(state.picSrc, state.frameTime);\n            const retries = state.retries ? (state.retries + 1) : 0;\n\t    setState({\n                ...state,\n\t\tpicSrc: state.picSrc,\n\t\tfirstPic: false,\n\t\tduration: duration,\n                style: style,\n                retries: retries,\n                vw: calc_vw(),\n                vh: calc_vh(),\n                detections: [],\n                stats: [],\n\t    });\n\t    document.title = `Retrying (${retries})` + (state.frameTime ? ` from ${state.frameTime} ...` : '...');\n        });\n    };\n\t\t\n    useEffect(() => {\n\tconst renewInterval = state.firstPic ? 0 : state.duration;\n\tconsole.log('Timeout till renew:', renewInterval);\n\tconst timer = setTimeout(refreshPic, renewInterval*1000);\n\t// Clear timeout if the component is unmounted\n\treturn () => clearTimeout(timer);\n    });\n\n    const setNextLocation = () => {\n\tconst current = locations.indexOf(state.location);\n        const next = (current + 1) % locations.length;\n        const location = locations[next];\n\tconsole.log(\"location:\", location);\n\tsetState({\n            ...state,\n\t    firstPic: true,\n            location: location,\n            vw: calc_vw(),\n            vh: calc_vh(),\n\t});\n\t//refreshPic();\n    };\n\n    const bind = useDoubleTap((event) => {\n        // Your action here\n        setNextLocation();\n        console.log('Double tapped');\n    });\n\n    return (\n\t<div className=\"App\"\n             {...bind}\n\t>\n\t    <div className=\"App-header\">\n                <Stage\n                    width={state.vw}\n                    height={state.vh}\n                    style={{backgroundColor:'dimgray'}}\n                >\n                    <Layer>\n                        <URLImage\n                            src={state.picSrc}\n                            scale={state.scale}\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewZonesComponent\n                            location={state.location}\n                            stats={state.stats}\n                            scale={state.scale}\n                            color=\"magenta\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <PreviewDetectionsComponent\n                            detections={state.detections}\n                            scale={state.scale}\n                            color=\"yellow\"\n                        />\n                    </Layer>\n                    <Layer>\n                        <Group\n                            x={state.vw - 200}\n                            y={3}\n                        >\n                            <Text\n                                text={`Info:\n  screen: ${state.vw}x${state.vh}\n  scale: ${state.scale}\n  location: ${state.location}\n  frame time: ${state.frameTime}\n  detections: ${state.detections.length}\n  zones:\n    ` + state.stats.map(stats => `${stats.zone}: ${stats.last_detected_cars}/${stats.max_detected_cars} [max of ${stats.period_for_max}]`).join(`\n    `)}\n                                fontSize={10}\n                                fill={\"lawngreen\"}\n                            />\n                        </Group>\n                        <Group\n                            x={state.vw - 180}\n                            y={state.vh - 30}\n                        >\n                            <Text\n                                text={`Help:\n  - Double-tap to select next location\n`}\n                                fontSize={10}\n                                fill={\"black\"}\n                            />\n                        </Group>\n                    </Layer>                \n                </Stage>\n\t    </div>\n\t</div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}